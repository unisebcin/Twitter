# This is a basic workflow to help you get started with Actions

name: Twitter Application

on:
  pull_request:
    branches: [ "main" ]
    
  push:
    branches: [ "main" ]

jobs:

  test:
    name: Twitter Tester
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # -----------------------------------------------------------------------------
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # Setup Python Environment      
      # -----------------------------------------------------------------------------
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        id: setup python
        with:
          python-version: '3.10'
      # -----------------------------------------------------------------------------          
      # Dependency Management
      # -----------------------------------------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      #----------------------------------------------
      #              run code analyzer
      #----------------------------------------------
      - name: Run Code Analyzer
        run: |
          source $VENV
          flake8
